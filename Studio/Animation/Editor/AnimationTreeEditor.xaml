<sk:TabDocument x:Class="Skill.Studio.Animation.Editor.AnimationTreeEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d" 
             xmlns:sk="clr-namespace:Skill.Studio"             
             xmlns:ctr="clr-namespace:Skill.Studio.Controls"
             xmlns:anim="clr-namespace:Skill.Studio.Animation"             
             xmlns:animedit="clr-namespace:Skill.Studio.Animation.Editor"
             xmlns:dmanim="clr-namespace:Skill.DataModels.Animation;assembly=Skill.DataModels"
             d:DesignHeight="473" d:DesignWidth="977" x:Name="This" >
    <sk:TabDocument.Resources>
        <!-- DragThumb Default Template -->
        <Style TargetType="{x:Type animedit:AnimDragThumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type animedit:AnimDragThumb}">
                        <Rectangle Fill="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Connector Style -->
        <Style TargetType="{x:Type animedit:AnimConnector}">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="12"/>
            <Setter Property="Background" Value="DarkGray"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type animedit:AnimConnector}">
                        <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
                            <!-- transparent extra space makes connector easier to hit -->
                            <Rectangle Fill="Transparent" Margin="-2"/>
                            <Rectangle Fill="{Binding FillBrush}"   />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ContextMenu x:Key="ConnectorContextMenu"  >
            <MenuItem Header="Break Connection" DataContext="{Binding}" Click="Mnu_BreakConnection_Click" />
        </ContextMenu>

    </sk:TabDocument.Resources>
    <sk:TabDocument.InputBindings>
        <KeyBinding Command="{x:Static animedit:AnimationTreeEditor.DuplicateCommand}" Gesture="CTRL+D" />
    </sk:TabDocument.InputBindings>
    <sk:TabDocument.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Undo"
                  Executed="UndoCmdExecuted"
                  CanExecute="UndoCmdCanExecute"/>
        <CommandBinding Command="ApplicationCommands.Redo"
                  Executed="RedoCmdExecuted"
                  CanExecute="RedoCmdCanExecute"/>
        <CommandBinding Command="ApplicationCommands.Cut"
                  Executed="CutCmdExecuted"
                  CanExecute="CutCmdCanExecute"/>
        <CommandBinding Command="ApplicationCommands.Copy"
                  Executed="CopyCmdExecuted"
                  CanExecute="CopyCmdCanExecute"/>
        <CommandBinding Command="ApplicationCommands.Paste"
                  Executed="PasteCmdExecuted"
                  CanExecute="PasteCmdCanExecute"/>
        <CommandBinding Command="ApplicationCommands.Delete"
                  Executed="DeleteCmdExecuted"
                  CanExecute="DeleteCmdCanExecute"/>
        <CommandBinding Command="{x:Static animedit:AnimationTreeEditor.PasteCommand}"
                  Executed="PasteCommandExecuted"
                  CanExecute="PasteCommandCanExecute"/>
        <CommandBinding Command="{x:Static animedit:AnimationTreeEditor.DuplicateCommand}"
                  Executed="DuplicateCommandExecuted"
                  CanExecute="DuplicateCommandCanExecute"/>

        <CommandBinding Command="{x:Static sk:MainWindow.AlignTopCommand}"
                  Executed="AlignTopCmdExecuted"
                  CanExecute="AlignTopCmdCanExecute"/>
        <CommandBinding Command="{x:Static sk:MainWindow.AlignBottomCommand}"
                  Executed="AlignBottomCmdExecuted"
                  CanExecute="AlignBottomCmdCanExecute"/>
        <CommandBinding Command="{x:Static sk:MainWindow.AlignLeftCommand}"
                  Executed="AlignLeftCmdExecuted"
                  CanExecute="AlignLeftCmdCanExecute"/>
        <CommandBinding Command="{x:Static sk:MainWindow.AlignRightCommand}"
                  Executed="AlignRightCmdExecuted"
                  CanExecute="AlignRightCmdCanExecute"/>
        <CommandBinding Command="{x:Static sk:MainWindow.AlignCenteredHorizontalCommand}"
                  Executed="AlignCenteredHorizontalCmdExecuted"
                  CanExecute="AlignCenteredHorizontalCmdCanExecute"/>
        <CommandBinding Command="{x:Static sk:MainWindow.AlignCenteredVerticalCommand}"
                  Executed="AlignCenteredVerticalCmdExecuted"
                  CanExecute="AlignCenteredVerticalCmdCanExecute"/>
        
    </sk:TabDocument.CommandBindings>
    <Grid>
        <ScrollViewer Name="_DesignerScrollViewer" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible">
            <ItemsControl ItemsSource="{Binding Elements}" >
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <animedit:AnimationTreeCanvas Editor="{Binding ElementName=This}" Background="LightGray" PreviewMouseRightButtonDown="Canvas_PreviewMouseRightButtonDown">
                            <animedit:AnimationTreeCanvas.ContextMenu >
                                <ContextMenu >
                                    <ContextMenu.Resources>
                                        <Style TargetType="Image">
                                            <Setter Property="Width" Value="16" />
                                            <Setter Property="Height" Value="16" />
                                        </Style>
                                    </ContextMenu.Resources>
                                    <MenuItem Header="Sequence" Click="Mnu_Create_Click" Tag="{x:Static dmanim:AnimNodeType.Sequence}" Icon="{StaticResource ImgAnimNodeSequence}" />
                                    <MenuItem Header="Random" Click="Mnu_Create_Click" Tag="{x:Static dmanim:AnimNodeType.Random}" Icon="{StaticResource ImgAnimNodeRandom}" />
                                    <MenuItem Header="Additive" Click="Mnu_Create_Click" Tag="{x:Static dmanim:AnimNodeType.AdditiveBlending}" Icon="{StaticResource ImgAnimNodeAdditive}" />
                                    <MenuItem Header="BlendBy" >
                                        <MenuItem Header="Speed" Click="Mnu_Create_Click" Tag="{x:Static dmanim:AnimNodeType.BlendBySpeed}" Icon="{StaticResource ImgAnimNodeBlendBySpeed}" />
                                        <MenuItem Header="Posture" Click="Mnu_Create_Click" Tag="{x:Static dmanim:AnimNodeType.BlendByPosture}" Icon="{StaticResource ImgAnimNodeBlendByPosture}" />
                                        <MenuItem Header="Idle" Click="Mnu_Create_Click" Tag="{x:Static dmanim:AnimNodeType.BlendByIdle}" Icon="{StaticResource ImgAnimNodeBlendByIdle}" />
                                        <MenuItem Header="Index" Click="Mnu_Create_Click" Tag="{x:Static dmanim:AnimNodeType.BlendByIndex}" Icon="{StaticResource ImgAnimNodeBlendByIndex}" />
                                    </MenuItem>
                                    <MenuItem Header="Directional" >
                                        <MenuItem Header="4Directional" Click="Mnu_Create_Click" Tag="{x:Static dmanim:AnimNodeType.Blend4Directional}" Icon="{StaticResource ImgAnimNode4Directional}" />
                                    </MenuItem>                                    
                                    <MenuItem Header="Other" >
                                        <MenuItem Header="Override" Click="Mnu_Create_Click" Tag="{x:Static dmanim:AnimNodeType.Override}" Icon="{StaticResource ImgAnimNodeOverride}" />
                                        <MenuItem Header="AimOffset" Click="Mnu_Create_Click" Tag="{x:Static dmanim:AnimNodeType.AimOffset}" Icon="{StaticResource ImgAnimNodeAimOffset}" />                                        
                                    </MenuItem>
                                    <MenuItem Header="SubTree" Click="Mnu_Create_Click" Tag="{x:Static dmanim:AnimNodeType.SubTree}" Icon="{StaticResource ImgSubTree}" />
                                    <Separator/>
                                    <MenuItem Header="Paste" Command="{x:Static animedit:AnimationTreeEditor.PasteCommand}" />
                                </ContextMenu>
                            </animedit:AnimationTreeCanvas.ContextMenu>
                        </animedit:AnimationTreeCanvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.Resources>
                    <DataTemplate DataType="{x:Type anim:AnimNodeViewModel}"  >
                        <animedit:AnimNodeBorder ViewModel="{Binding}" BorderThickness="2" BorderBrush="{Binding BorderBrush}" Background="{StaticResource AnimNodeBg}" SnapsToDevicePixels="True" MinWidth="150" MinHeight="60" >
                            <Border.ContextMenu>
                                <ContextMenu>
                                    <ContextMenu.Resources>
                                        <Style TargetType="Image" >
                                            <Setter Property="Width" Value="16"/>
                                            <Setter Property="Height" Value="16"/>
                                        </Style>
                                    </ContextMenu.Resources>
                                    <MenuItem Header="Duplicate" InputGestureText="Ctrl+D" Command="{x:Static animedit:AnimationTreeEditor.DuplicateCommand}">
                                        <MenuItem.Icon>
                                            <ctr:ButtonImage NormalImage="{StaticResource ImgCopy}" DisableImage="{StaticResource ImgCopy_D}" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Copy" InputGestureText="Ctrl+C" Command="{x:Static ApplicationCommands.Copy}">
                                        <MenuItem.Icon>
                                            <ctr:ButtonImage NormalImage="{StaticResource ImgCopy}" DisableImage="{StaticResource ImgCopy_D}" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Delete" InputGestureText="Del" Command="{x:Static ApplicationCommands.Delete}">
                                        <MenuItem.Icon>
                                            <ctr:ButtonImage NormalImage="{StaticResource ImgDelete}" DisableImage="{StaticResource ImgDelete_D}" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </Border.ContextMenu>
                            <Grid>
                                <animedit:AnimDragThumb Cursor="SizeAll" ViewModel="{Binding}"  />
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="36" />
                                        <RowDefinition Height="1" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0" Background="{Binding ContentBrush}" IsHitTestVisible="False" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="36" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Image Grid.Column="0" Width="32" Height="32" Source="{Binding ImageName}" />
                                        <TextBlock Style="{StaticResource AnimationHeaderText}" Text="{Binding Name}" Margin="4,2" IsHitTestVisible="False" VerticalAlignment="Center" Grid.Column="1" />
                                    </Grid>
                                    <Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="{Binding BorderBrush}"  />
                                    <Grid Grid.Row="2" Width="Auto" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="30" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <DockPanel Grid.Column="0" Visibility="{Binding OutVisible}" >
                                            <animedit:AnimConnector ContextMenu="{StaticResource ConnectorContextMenu}" DockPanel.Dock="Left" ViewModel="{Binding OutConnector}" Orientation="Left" Margin="-20,0,0,0" VerticalAlignment="Center"  />
                                            <TextBlock Style="{StaticResource AnimationText}" Margin="4,0,0,0" Text="{Binding OutConnector.Name}" VerticalAlignment="Center" IsHitTestVisible="False" />
                                        </DockPanel>
                                        <ItemsControl Grid.Column="1" ItemsSource="{Binding Path=Inputs}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel   />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate >
                                                    <DockPanel Height="24" >
                                                        <animedit:AnimConnector ContextMenu="{StaticResource ConnectorContextMenu}" ViewModel="{Binding}" DockPanel.Dock="Right" Orientation="Right" Margin="0,0,-20,0" Visibility="{Binding Visible}" />
                                                        <TextBlock Style="{StaticResource AnimationText}" Text="{Binding Name}" TextAlignment="Right" />
                                                    </DockPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </animedit:AnimNodeBorder>
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type anim:AnimationConnectionViewModel}">
                        <DataTemplate.Resources>
                            <!-- Arrow Grid Style -->
                            <Style x:Key="ArrowGridStyle" TargetType="Grid">
                                <Setter Property="Width" Value="10"/>
                                <Setter Property="Height" Value="10"/>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform X="-5" Y="-5"/>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <!-- base style for all arrow shapes -->
                            <Style x:Key="ArrowSymbolBaseStyle" TargetType="Path">
                                <Setter Property="Fill" Value="{Binding PathBrush}"/>
                                <Setter Property="Stretch" Value="Fill"/>
                            </Style>
                            <!-- Arrow -->
                            <Style x:Key="Arrow" TargetType="Path" BasedOn="{StaticResource ArrowSymbolBaseStyle}">
                                <Setter Property="Data" Value="M 0,0 12,4 0,8 Z"/>
                            </Style>
                            <!-- Diamond  -->
                            <Style x:Key="Diamond" TargetType="Path" BasedOn="{StaticResource ArrowSymbolBaseStyle}">
                                <Setter Property="Data" Value="M -5,0 0,-5 5,0 0,5 Z"/>
                            </Style>
                        </DataTemplate.Resources>
                        <Canvas ZIndex="1000" >
                            <Path StrokeThickness="2"
                              Stroke="{Binding  PathBrush}"
                              StrokeStartLineCap="Round"
                              StrokeEndLineCap="Round"
                              StrokeLineJoin="Round"
                              StrokeDashArray="{Binding StrokeDashArray}"
                              SnapsToDevicePixels="True" Data="{Binding PathGeometry}" >
                                <Path.BitmapEffect>
                                    <DropShadowBitmapEffect Color="Gray" Direction="315" ShadowDepth="10" Softness="0" Opacity="0.1"/>
                                </Path.BitmapEffect>
                            </Path>
                            <Grid Style="{StaticResource ArrowGridStyle}"
                              Canvas.Left="{Binding AnchorPositionSink.X}"
                              Canvas.Top="{Binding AnchorPositionSink.Y}">
                                <Path Style="{StaticResource Arrow}" />
                                <Grid.LayoutTransform>
                                    <RotateTransform Angle="{Binding AnchorAngleSink}"/>
                                </Grid.LayoutTransform>
                            </Grid>
                        </Canvas>
                    </DataTemplate>
                </ItemsControl.Resources>
                <ItemsControl.ItemContainerStyle >
                    <Style >
                        <Setter Property="Canvas.Top" Value="{Binding Path=Y,Mode=TwoWay}" />
                        <Setter Property="Canvas.Left" Value="{Binding Path=X,Mode=TwoWay}" />
                        <EventSetter Event="Control.PreviewMouseDown" Handler="AnimNode_PreviewMouseDown" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</sk:TabDocument>
