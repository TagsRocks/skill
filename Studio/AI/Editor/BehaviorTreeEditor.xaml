<sk:TabDocument x:Class="Skill.Studio.AI.Editor.BehaviorTreeEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ad="clr-namespace:AvalonDock;assembly=AvalonDock"
             xmlns:vm="clr-namespace:Skill.Studio.AI"
             xmlns:dmai="clr-namespace:Skill.DataModels.AI;assembly=Skill.DataModels"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:sk="clr-namespace:Skill.Studio"
             xmlns:my="clr-namespace:Skill.Studio.Controls"             
             xmlns:bedit="clr-namespace:Skill.Studio.AI.Editor"             
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="900" x:Name="BTEditor" >

    <sk:TabDocument.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Undo"
                  Executed="UndoCmdExecuted"
                  CanExecute="UndoCmdCanExecute"/>
        <CommandBinding Command="ApplicationCommands.Redo"
                  Executed="RedoCmdExecuted"
                  CanExecute="RedoCmdCanExecute"/>
        <CommandBinding Command="ApplicationCommands.Cut"
                  Executed="CutCmdExecuted"
                  CanExecute="CutCmdCanExecute"/>
        <CommandBinding Command="ApplicationCommands.Copy"
                  Executed="CopyCmdExecuted"
                  CanExecute="CopyCmdCanExecute"/>
        <CommandBinding Command="ApplicationCommands.Paste"
                  Executed="PasteCmdExecuted"
                  CanExecute="PasteCmdCanExecute"/>
        <CommandBinding Command="ApplicationCommands.Delete"
                  Executed="DeleteCmdExecuted"
                  CanExecute="DeleteCmdCanExecute"/>
    </sk:TabDocument.CommandBindings>

    <sk:TabDocument.Resources>
        <ContextMenu x:Key="TVContextMenu" >
            <ContextMenu.Resources>
                <Style TargetType="{x:Type Image}">
                    <Setter Property="Width" Value="16"/>
                    <Setter Property="Height" Value="16"/>
                </Style>
            </ContextMenu.Resources>
            <MenuItem Header="Move Up" IsEnabled="{Binding Path=IsMoveUpAv}" Click="Mnu_MoveUp_Click" >
                <MenuItem.Icon>
                    <my:ButtonImage NormalImage="{StaticResource ImgUp}" DisableImage="{StaticResource ImgUp_D}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Move Down" IsEnabled="{Binding Path=IsMoveDownAv}" Click="Mnu_MoveDown_Click"  >
                <MenuItem.Icon>
                    <my:ButtonImage NormalImage="{StaticResource ImgDown}" DisableImage="{StaticResource ImgDown_D}" />
                </MenuItem.Icon>
            </MenuItem>
            <Separator />
            <MenuItem Header="New" IsEnabled="{Binding Path=IsNewAv}">
                <MenuItem Header="Action" Click="Mnu_NewAction_Click" Tag="{x:Static dmai:BehaviorType.Action}" >
                    <MenuItem.Icon>
                        <my:ButtonImage NormalImage="{StaticResource ImgAction}" DisableImage="{StaticResource ImgAction_D}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Condition" Click="Mnu_NewCondition_Click" Tag="{x:Static dmai:BehaviorType.Condition}"  >
                    <MenuItem.Icon>
                        <my:ButtonImage NormalImage="{StaticResource ImgCondition}" DisableImage="{StaticResource ImgCondition_D}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Change State" Click="Mnu_NewChangeState_Click" Tag="{x:Static dmai:BehaviorType.ChangeState}" >
                    <MenuItem.Icon>
                        <my:ButtonImage NormalImage="{StaticResource ImgChangeState}" DisableImage="{StaticResource ImgChangeState_D}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Decorators" >
                    <MenuItem.Icon>
                        <my:ButtonImage NormalImage="{StaticResource ImgDecorator}" DisableImage="{StaticResource ImgDecorator_D}" />
                    </MenuItem.Icon>
                    <MenuItem Header="Decorator" Click="Mnu_NewDecorator_Click" Tag="{x:Static dmai:DecoratorType.Default}"  >
                        <MenuItem.Icon>
                            <my:ButtonImage NormalImage="{StaticResource ImgDecorator}" DisableImage="{StaticResource ImgDecorator_D}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="AccessLimitDecorator" Click="Mnu_NewDecorator_Click" Tag="{x:Static dmai:DecoratorType.AccessLimit}"  >
                        <MenuItem.Icon>
                            <my:ButtonImage NormalImage="{StaticResource ImgACDecorator}" DisableImage="{StaticResource ImgACDecorator_D}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Composites" >
                    <MenuItem.Icon>
                        <my:ButtonImage NormalImage="{StaticResource ImgComposite}" DisableImage="{StaticResource ImgComposite_D}" />
                    </MenuItem.Icon>
                    <MenuItem Header="Sequence" Click="Mnu_NewComposite_Click" Tag="{x:Static dmai:CompositeType.Sequence}" >
                        <MenuItem.Icon>
                            <my:ButtonImage NormalImage="{StaticResource ImgSequence}" DisableImage="{StaticResource ImgSequence_D}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Concurrent" Click="Mnu_NewComposite_Click" Tag="{x:Static dmai:CompositeType.Concurrent}"  >
                        <MenuItem.Icon>
                            <my:ButtonImage NormalImage="{StaticResource ImgConcurrent}" DisableImage="{StaticResource ImgConcurrent_D}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Random" Click="Mnu_NewComposite_Click" Tag="{x:Static dmai:CompositeType.Random}" >
                        <MenuItem.Icon>
                            <my:ButtonImage NormalImage="{StaticResource ImgRandom}" DisableImage="{StaticResource ImgRandom_D}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Priority" Click="Mnu_NewComposite_Click" Tag="{x:Static dmai:CompositeType.Priority}" >
                        <MenuItem.Icon>
                            <my:ButtonImage NormalImage="{StaticResource ImgPriority}" DisableImage="{StaticResource ImgPriority_D}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Loop" Click="Mnu_NewComposite_Click" Tag="{x:Static dmai:CompositeType.Loop}"  >
                        <MenuItem.Icon>
                            <my:ButtonImage NormalImage="{StaticResource ImgLoop}" DisableImage="{StaticResource ImgLoop_D}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </MenuItem>
            <Separator />
            <MenuItem Header="Insert" IsEnabled="{Binding Path=IsNewAv}" >
                <MenuItem.Resources>
                    <DataTemplate DataType="{x:Type  vm:BehaviorViewModel}">
                        <StackPanel Orientation="Horizontal" >
                            <Image Width="16" Height="16" Margin="2" Source="{Binding ImageName}"  />
                            <TextBlock Text="{Binding Name}" Tag="{Binding}" />
                        </StackPanel>
                    </DataTemplate>
                    <Style x:Key="MenuClickStyle" >
                        <Setter Property="MenuItem.Tag" Value="{Binding}" />
                        <EventSetter Event="MenuItem.Click" Handler="Mnu_Insert_Click" />
                    </Style>
                </MenuItem.Resources>
                <MenuItem Header="Actions" ItemsSource="{Binding BehaviorTree.Actions}" ItemContainerStyle="{StaticResource MenuClickStyle}" >
                    <MenuItem.Icon>
                        <my:ButtonImage NormalImage="{StaticResource ImgAction}" DisableImage="{StaticResource ImgAction_D}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Conditions" ItemsSource="{Binding BehaviorTree.Conditions}" ItemContainerStyle="{StaticResource MenuClickStyle}" >
                    <MenuItem.Icon>
                        <my:ButtonImage NormalImage="{StaticResource ImgCondition}" DisableImage="{StaticResource ImgCondition_D}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Change States" ItemsSource="{Binding BehaviorTree.ChangeStates}" ItemContainerStyle="{StaticResource MenuClickStyle}" >
                    <MenuItem.Icon>
                        <my:ButtonImage NormalImage="{StaticResource ImgChangeState}" DisableImage="{StaticResource ImgChangeState_D}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Decorators" ItemsSource="{Binding BehaviorTree.Decorators}" ItemContainerStyle="{StaticResource MenuClickStyle}" >
                    <MenuItem.Icon>
                        <my:ButtonImage NormalImage="{StaticResource ImgDecorator}" DisableImage="{StaticResource ImgDecorator_D}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Composites" ItemsSource="{Binding BehaviorTree.Composites}" ItemContainerStyle="{StaticResource MenuClickStyle}" >
                    <MenuItem.Icon>
                        <my:ButtonImage NormalImage="{StaticResource ImgComposite}" DisableImage="{StaticResource ImgComposite_D}" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <Separator />
            <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
            <MenuItem Header="Paste"  Command="ApplicationCommands.Paste"/>
            <MenuItem Header="Delete" Command="ApplicationCommands.Delete"/>
        </ContextMenu>
    </sk:TabDocument.Resources>
    <Grid Background="White" MouseDown="Back_MouseDown" >
        <TabControl x:Name="_Tb" Grid.Row="1" SelectionChanged="Tb_SelectionChanged" >
            <TabItem Header="Design" ToolTip="Edit and Design tree" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="32" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <ToolBar Grid.Row="0" Grid.Column="0" Background="{StaticResource ToolbarBackColor}" >
                        <ToolBarPanel Orientation="Horizontal" Margin="2,0,6,0" >
                            <TextBlock Text="States : " VerticalAlignment="Center" x:Name="_Txt" />
                            <ComboBox MinWidth="140" ItemsSource="{Binding BehaviorTree.States}" SelectionChanged="CmbStates_Changed" x:Name="_CmbStates" VerticalAlignment="Center" >
                                <ComboBox.Resources>
                                    <Style TargetType="TextBlock" x:Key="TxtStyle" >
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsDefaultState}" Value="true" >
                                                <Setter Property="Foreground" Value="Blue" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                    <DataTemplate DataType="{x:Type  vm:BehaviorViewModel}">
                                        <TextBlock Text="{Binding Name}" Style="{StaticResource TxtStyle}" />
                                    </DataTemplate>
                                </ComboBox.Resources>
                            </ComboBox>
                        </ToolBarPanel>
                        <Separator Width="2" Background="Gray" />
                        <ToolBarPanel Orientation="Horizontal" Margin="4,0,6,0" >
                            <Button ToolTip="Add New State"  Click="BtnAddNewState_Click" Margin="2,2,0,2" >
                                <Image Source="{StaticResource ImgAdd2}" />
                            </Button>
                            <Button ToolTip="Delete State" Click="BtnDeleteState_Click" Margin="2,2,0,2">
                                <Image Source="{StaticResource ImgDelete2}" />
                            </Button>
                            <Button ToolTip="Set as Default State" Click="BtnSetasDefaultState_Click" Margin="2,2,0,2" >
                                <Image Source="{StaticResource ImgSetAsDefault}" />
                            </Button>
                        </ToolBarPanel>
                        <Separator Width="2" Background="Gray" />
                        <ToolBarPanel Orientation="Horizontal" Margin="4,0,2,0">
                            <Button ToolTip="AccessKeys" Click="BtnEditAccessKeys_Click" Margin="2,2,0,2" >
                                <Image Source="{StaticResource ImgSharedAccessKeys}" />
                            </Button>
                        </ToolBarPanel>
                    </ToolBar>
                    <TreeView Grid.Row="1" ItemsSource="{Binding BehaviorTree.Nodes}" BorderThickness="0" Name="_BTTree" Background="White" 
                  SelectedItemChanged="_BTTree_SelectedItemChanged" Grid.Column="0" ContextMenu="{StaticResource TVContextMenu}"  >
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource TreeViewItemStyle}">
                                <EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
                                <EventSetter Event="TreeViewItem.KeyDown" Handler="TreeViewItem_KeyDown"/>
                            </Style>
                        </TreeView.ItemContainerStyle>

                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type vm:BehaviorViewModel}"
                    ItemsSource="{Binding}">
                                <Grid>
                                    <StackPanel Orientation="Horizontal" Height="16" >
                                        <Image Width="16" Height="16" Margin="3,0" Source="{Binding ImageName}" />
                                        <TextBlock Text="{Binding DisplayName}" />
                                    </StackPanel>
                                </Grid>
                            </HierarchicalDataTemplate>
                            <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#f2f8ff" Offset="0.05"/>
                                <GradientStop Color="#d0e5ff" Offset="1"/>
                            </LinearGradientBrush>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
                        </TreeView.Resources>
                    </TreeView>
                </Grid>
            </TabItem>
            <TabItem Header="Preview" ToolTip="Preview and Test tree" >
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="2"/>
                        <ColumnDefinition Width="6*"/>
                    </Grid.ColumnDefinitions>
                    <TabControl Grid.Row="0" x:Name="_TbChecks" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" BorderThickness="1,1,0,0" >
                        <TabControl.Resources>
                            <Style TargetType="ListView" >
                                <Style.Resources>
                                    <DataTemplate DataType="{x:Type vm:BehaviorViewModel}">
                                        <CheckBox IsChecked="{Binding IsValid}" Margin="2,0" >
                                            <TextBlock Text="{Binding Name}"  />
                                        </CheckBox>
                                    </DataTemplate>
                                </Style.Resources>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </TabControl.Resources>
                        <TabItem >
                            <TabItem.Header>
                                <Image Source="{StaticResource ImgCondition}" Width="16" Height="16" ToolTip="Conditions" />
                            </TabItem.Header>
                            <ListView ItemsSource="{Binding BehaviorTree.Conditions}" />
                        </TabItem>
                        <TabItem >
                            <TabItem.Header>
                                <Image Source="{StaticResource ImgDecorator}" Width="16" Height="16" ToolTip="Decorators"  />
                            </TabItem.Header>
                            <ListView ItemsSource="{Binding BehaviorTree.Decorators}" />
                        </TabItem>
                        <TabItem >
                            <TabItem.Header>
                                <Image Source="{StaticResource ImgAction}" Width="16" Height="16" ToolTip="Actions"  />
                            </TabItem.Header>
                            <ListView ItemsSource="{Binding BehaviorTree.Actions}"/>
                        </TabItem>
                    </TabControl>
                    <GridSplitter Background="Gray" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch"  />
                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ToolBar Grid.Row="0" Background="{StaticResource ToolbarBackColor}" >
                            <ToolBarPanel Orientation="Horizontal" >
                                <my:ToggleMediaButton x:Name="_BtnPlayStop" NormalImage="{StaticResource ImgPlayStopBtn}" PressedImage="{StaticResource ImgStopPressedBtn}" HoverImage="{StaticResource ImgPlayStopHoverBtn}"  Click="BtnPlayStop_Click" Margin="1" ToolTip="Start/Stop Simulation" />
                                <my:ToggleMediaButton x:Name="_BtnPause" NormalImage="{StaticResource ImgPauseBtn}" PressedImage="{StaticResource ImgPausePressedBtn}" HoverImage="{StaticResource ImgPauseHoverBtn}" Click="BtnPause_Click" Margin="1" ToolTip="Pause Simulation" />
                                <my:MediaButton IsEnabled="{Binding IsChecked,ElementName=_BtnPause}" x:Name="_BtnStep" NormalImage="{StaticResource ImgStepBtn}" PressedImage="{StaticResource ImgStepPressedBtn}" HoverImage="{StaticResource ImgStepHoverBtn}" Click="BtnStep_Click" Margin="1" ToolTip="Step Simulation" />
                                <TextBlock Text="TimeStep :" VerticalAlignment="Center" Margin="6,0,2,0" />
                                <ComboBox x:Name="_CmbTimeInterval" ItemsSource="{Binding TimeIntervals,ElementName=BTEditor }" Width="50" SelectionChanged="CmbTimeInterval_SelectionChanged" Margin="0,3,2,3" />
                                <TextBlock Text="Timer : " Margin="4,0" VerticalAlignment="Center" />
                                <TextBlock Text="{Binding BehaviorTree.DebugTimerString, Mode=OneWay}" Width="80" Margin="0,0,4,0" VerticalAlignment="Center" Foreground="AliceBlue" FontFamily="Courier New" FontSize="14" />
                            </ToolBarPanel>
                            <Separator Width="2" Background="Gray" />
                            <ToolBarPanel Orientation="Horizontal" >
                                <TextBlock Text="Animation Size" VerticalAlignment="Center" Margin="4,0,2,0" />
                                <Slider x:Name="_SliAnims" Width="100" Value="{Binding AnimationSize}" Minimum="64" Maximum="194" ToolTip="Animation Size" Margin="4,0,0,0" VerticalAlignment="Center" />
                            </ToolBarPanel>
                        </ToolBar>
                        <Grid Grid.Row="1" >
                            <xctk:Zoombox x:Name="_Zoombox" >
                                <ItemsControl ItemsSource="{Binding BehaviorTree.SelectedBehaviors}" >
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <bedit:BehaviorTreeCanvas Editor="{Binding ElementName=BTEditor}"  >
                                            </bedit:BehaviorTreeCanvas>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.Resources>
                                        <DataTemplate DataType="{x:Type vm:BehaviorViewModel}"  >
                                            <bedit:BehaviorBorder ViewModel="{Binding}" x:Name="Bd" >
                                                <Grid>
                                                    <Canvas VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  >
                                                        <Path  Data="{Binding ConnectionToParent}" Stroke="{Binding BorderBrush}" StrokeThickness="{Binding ConnectionStroke}" />
                                                    </Canvas>
                                                    <Border Background="{Binding BackBrush}" BorderBrush="{Binding BorderBrush}" BorderThickness="2" CornerRadius="{Binding CornerRadius}" Padding="6" MinWidth="80" MinHeight="{Binding MinHeight}" >
                                                        <StackPanel Orientation="Horizontal" >
                                                            <Image Source="{Binding ImageName}" Width="16" Height="16" Margin="2,0" />
                                                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="2,0" Foreground="{Binding TextBrush}" />
                                                            <CheckBox IsChecked="{Binding IsValid}" Margin="2,0" VerticalAlignment="Center" Visibility="{Binding IsValidable, ConverterParameter=false, Converter={StaticResource BToVisConverter}}" />
                                                        </StackPanel>
                                                    </Border>
                                                </Grid>
                                            </bedit:BehaviorBorder>
                                        </DataTemplate>
                                    </ItemsControl.Resources>
                                    <ItemsControl.ItemContainerStyle >
                                        <Style >
                                            <Setter Property="Canvas.Top" Value="{Binding Path=Y,Mode=TwoWay}" />
                                            <Setter Property="Canvas.Left" Value="{Binding Path=X,Mode=TwoWay}" />
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                </ItemsControl>
                            </xctk:Zoombox>
                            <ItemsControl ItemsSource="{Binding Animations}" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,0,8,0" Height="{Binding AnimationSize}"  Visibility="{Binding ShowAnimations, Converter={StaticResource BToVisConverter}, ConverterParameter=False}" >
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Right" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</sk:TabDocument>
